[{"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/index.tsx":"1","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/reportWebVitals.ts":"2","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/App.tsx":"3","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/ButtonGroupSingle.tsx":"4","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/CheckBoxWrapper.tsx":"5","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/NavSubjects.tsx":"6","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/Home.tsx":"7","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/Brain3D.tsx":"8","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/MainWrapper.tsx":"9","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/ExploreIndividual.tsx":"10","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/ExploreAtlas.tsx":"11","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/Download.tsx":"12","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/Paradigm.tsx":"13","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/SubjectsTable.tsx":"14","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/SubjectsGraph.js":"15","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/SubjectsActivations.js":"16","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/Brain3D_obj.tsx":"17","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/Brain3D_obj_rays.tsx":"18","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/ImageSlider.tsx":"19"},{"size":504,"mtime":1613600794824,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1609172678286,"results":"22","hashOfConfig":"21"},{"size":877,"mtime":1613618967497,"results":"23","hashOfConfig":"21"},{"size":2350,"mtime":1610597350081,"results":"24","hashOfConfig":"21"},{"size":693,"mtime":1610117573047,"results":"25","hashOfConfig":"21"},{"size":2518,"mtime":1612474155098,"results":"26","hashOfConfig":"21"},{"size":3796,"mtime":1614109947519,"results":"27","hashOfConfig":"21"},{"size":3764,"mtime":1614134557276,"results":"28","hashOfConfig":"21"},{"size":1549,"mtime":1613584619723,"results":"29","hashOfConfig":"21"},{"size":362,"mtime":1613678757264,"results":"30","hashOfConfig":"21"},{"size":2576,"mtime":1614185872587,"results":"31","hashOfConfig":"21"},{"size":5685,"mtime":1613941396416,"results":"32","hashOfConfig":"21"},{"size":201,"mtime":1613577773096,"results":"33","hashOfConfig":"21"},{"size":5223,"mtime":1616601477621,"results":"34","hashOfConfig":"21"},{"size":4651,"mtime":1613759497149,"results":"35","hashOfConfig":"21"},{"size":5277,"mtime":1616601529467,"results":"36","hashOfConfig":"21"},{"size":4412,"mtime":1614185845027,"results":"37","hashOfConfig":"21"},{"size":6145,"mtime":1614181420860,"results":"38","hashOfConfig":"21"},{"size":1003,"mtime":1616601477627,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"17l883",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/index.tsx",[],["84","85"],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/reportWebVitals.ts",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/App.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/ButtonGroupSingle.tsx",[],["86","87"],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/CheckBoxWrapper.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/NavSubjects.tsx",[],["88","89"],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/Home.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/Brain3D.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/MainWrapper.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/ExploreIndividual.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/ExploreAtlas.tsx",["90"],"import React from 'react';\nimport MainWrapper from \"./components/MainWrapper\";\nimport {Card, Row, Col} from 'react-bootstrap';\nimport Brain3D from \"./components/Brain3D_obj\";\n// import Brain3D from \"./components/Brain3D\";\nimport {Button} from \"react-bootstrap\";\n\nconst ExploreAtlas = () => {\n\n    return (\n        <MainWrapper>\n            <br/>\n            <main className=\"container\">\n                <Row xs={10} md={2} lg={2}>\n                    <Col>\n                        <Card bg=\"light\" text=\"dark\" border=\"dark\">\n                            <Card.Body>\n                                <Card.Title><h2 className=\"border-bottom pb-2 mb-0\">Volume</h2></Card.Title>\n                                    {/*<div id='ParentID_1'/>*/}\n                                    <Brain3D parentID='ParentID_2' objFile='SPM_cortex_20484_atlas.obj'/>\n                            </Card.Body>\n                            {/*<Button size={'sm'} variant={'danger'}>Hello</Button>*/}\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card bg=\"dark\" text=\"white\" border=\"none\">\n                            <Card.Body>\n                                <Card.Text>\n                                    More than likely some descriptive information would go here.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n                <br/>\n                <Row xs={8} md={2} lg={2}>\n                    <Col>\n                          <Card bg=\"light\" text=\"dark\" border=\"dark\">\n                            <Card.Body>\n                                <Card.Title><h2 className=\"border-bottom pb-2 mb-0\">Surface</h2></Card.Title>\n                                    {/*<div id='ParentID_2'/>*/}\n                                    <Brain3D parentID='ParentID_1' objFile='FS_fsaverage_pial_atlas.obj'/>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card bg=\"dark\" text=\"white\" border=\"none\">\n                            <Card.Body>\n                                <Card.Text>\n                                    And maybe a graph or some type of interactive UI.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </main>\n        </MainWrapper>\n    );\n};\n\nexport default ExploreAtlas;\n\n\n","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/Download.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/Paradigm.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/SubjectsTable.tsx",["91"],"import BootstrapTable from 'react-bootstrap-table-next'\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\nimport React, {Component} from \"react\";\nimport {Container, Tabs, Tab} from \"react-bootstrap\";\nimport SubjectsGraph from \"./SubjectsGraph\"\nimport SubjectsActivations from \"./SubjectsActivations\"\nimport ImageSlider from \"./ImageSlider\";\n\n// custom CSS for this page\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\n\n\n// documentation for react-bootstrap-table2-filter\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\n\ntype selectTypes = {\n    [key: string]: string;\n    'left-lat': string;\n    'bi-lat': string;\n    'right-lat': string;\n};\n\ninterface Props {\n}\n\ninterface State {\n    selectOptions: selectTypes;\n    data: any;\n}\n\nclass SubjectsTable extends Component<Props, State> {\n\n    lateralFilter: any;\n    node: any;\n    componentDidMount() {\n        fetch('http://localhost:8000/api/products')\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ data: data });\n            });\n    }\n\n    handleClick = () => {\n        this.lateralFilter(0);\n    };\n\n    handleGetSelectedData = (node: any) =>\n    {\n        return (this.node.selectionContext.selected);\n    }\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectOptions: {\n                'left-lat': 'left-lat',\n                'bi-lat': 'bi-lat',\n                'right-lat': 'right-lat'\n            },\n            data: []\n        };\n    };\n\n    render() {\n\n        return (\n            <Container>\n                {/*image slider with clicks*/}\n                {/*<ImageSlider*/}\n                {/*    data={this.state.data}*/}\n                {/*    callback={this.handleGetSelectedData}*/}\n                {/*/>*/}\n                <br/>\n                <Tabs defaultActiveKey=\"histogram\" transition={false}>\n                    <Tab eventKey=\"histogram\" title=\"Histogram\">\n                        <SubjectsGraph\n                            data={this.state.data}\n                            callback={this.handleGetSelectedData}\n                        />\n                    </Tab>\n                    <Tab eventKey=\"activations\" title=\"Activations\">\n                        <SubjectsActivations\n                            data={this.state.data}\n                            callback={this.handleGetSelectedData}\n                        />\n                    </Tab>\n                </Tabs>\n                {/*<SubjectsGraph*/}\n                {/*    data={this.state.data}*/}\n                {/*    callback={this.handleGetSelectedData}*/}\n                {/*/>*/}\n\n                <BootstrapTable\n                    ref={ n => this.node = n }\n                    keyField='id'\n                    data={ this.state.data }\n                    columns={[{\n                        dataField: 'subjID',\n                        text: 'Subject'\n                    }, {\n                        dataField: 'downloads',\n                        text: 'Downloads'\n                    }, {\n                        //     dataField: 'individual_stats.LH_SN_ES',\n                        //     text: 'LH_SN_ES'\n                        // }, {\n                        //     dataField: 'individual_stats.LH_SN_spcorr',\n                        //     text: 'LH_SN_spcorr',\n                        // }, {\n                        //     dataField: 'individual_stats.LH_SN_volume',\n                        //     text: 'LH_SN_volume'\n                        // }, {\n                        dataField: 'individual_stats.Lateralization',\n                        text: 'Lateralization',\n                        formatter: cell => this.state.selectOptions[cell],\n                        filter: selectFilter({\n                            options: this.state.selectOptions,\n                            getFilter: (filter) => {\n                                this.lateralFilter = filter;\n                            }\n                        })\n\n                    }]}\n                    selectRow={ {mode: 'checkbox', clickToSelect: true} }\n                    pagination={ paginationFactory({\n                        paginationSize: 4,\n                        pageStartIndex: 0,\n                        showTotal: true,\n                        sizePerPageList: [{\n                            text: '5', value: 5\n                        }, {\n                            text: '10', value: 10\n                        }, {\n                            text: '25', value: 25\n                        }, {\n                            text: '50', value: 50\n                        }, {\n                            text: 'All', value: this.state.data.length\n                        }]}\n                    ) }\n                    filter={ filterFactory() }\n                />\n            </Container>\n\n        );\n    }\n}\nexport default SubjectsTable;\n","/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/SubjectsGraph.js",[],["92","93"],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/SubjectsActivations.js",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/Brain3D_obj.tsx",[],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/Brain3D_obj_rays.tsx",["94"],"/Users/jaffourt/Desktop/langatlas/react-langatlas/src/main/components/ImageSlider.tsx",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"96","replacedBy":"102"},{"ruleId":"98","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":9,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"108","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":19},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"104","severity":1,"message":"109","line":3,"column":9,"nodeType":"106","messageId":"107","endLine":3,"endColumn":15},{"ruleId":"104","severity":1,"message":"110","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":24},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],["111"],["112"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ImageSlider' is defined but never used.","'Sphere' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]